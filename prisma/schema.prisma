generator db {
    provider               = "prisma-client-py"
    partial_type_generator = "prisma/partial_types.py"
    interface              = "sync"
    recursive_type_depth   = 5
    previewFeatures        = ["fullTextSearch"]
}

datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
}

model JobPlatform {
    id    BigInt @id @default(autoincrement())
    name  String
    label String
    link  String

    companies Company[] @relation(name: "job_platform")
    jobs      Job[]     @relation(name: "job_platform")

    created_at DateTime @default(now())
    updated_at DateTime @updatedAt
}

model Company {
    id          BigInt  @id @default(autoincrement())
    name        String
    description String?
    link        String
    photo_url   String?

    job_platform_id BigInt
    job_platform    JobPlatform @relation(name: "job_platform", fields: [job_platform_id], references: [id])

    created_at DateTime @default(now())
    updated_at DateTime @updatedAt
    jobs       Job[]    @relation(name: "company")
}

model Job {
    id          BigInt @id @default(autoincrement())
    job_id      String
    title       String
    description String
    link        String

    body String?

    job_metas JobMeta[] @relation(name: "job")

    company_id      BigInt
    company         Company     @relation(name: "company", fields: [company_id], references: [id])
    job_platform_id BigInt
    job_platform    JobPlatform @relation(name: "job_platform", fields: [job_platform_id], references: [id])
    created_at      DateTime    @default(now())
    updated_at      DateTime    @updatedAt
}

model JobMeta {
    id         BigInt   @id @default(autoincrement())
    job_id     BigInt
    job        Job      @relation(name: "job", fields: [job_id], references: [id])
    key        String
    value      String
    created_at DateTime @default(now())
    updated_at DateTime @updatedAt
}
